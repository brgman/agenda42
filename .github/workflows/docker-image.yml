name: Docker Image CI/CD

on:
  push:
    branches: [ "master" ]

jobs:
  build-run-publish:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      - name: Check runner user
        run: whoami

      - name: Extract version from package.json
        id: pkg
        run: |
          VERSION=$(jq -r .version package.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Back-up of database
        run: docker cp agenda42:app/agenda42.sqlite /home/aron

      - name: Build Docker image
        run: |
          docker build \
            -t agenda42:latest \
            -t ghcr.io/brgman/agenda42:latest \
            -t ghcr.io/brgman/agenda42:${{ steps.pkg.outputs.version }} \
            .

      - name: Remove old container
        run: docker rm -f agenda42 || true

      - name: Run new container
        run: |
          docker run -d --restart always \
            --security-opt apparmor=unconfined \
            --name agenda42 \
            -e API_URI=${{ secrets.API_URI }} \
            -e API_TOKEN=${{ secrets.API_TOKEN }} \
            -e CLIENT_ID=${{ secrets.CLIENT_ID }} \
            -e STATUS=${{ secrets.STATUS }} \
            -e POINTS_FOR_PINNED=${{ secrets.POINTS_FOR_PINNED }} \
            -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
            agenda42:latest

      - name: Push Docker image to GitHub Container Registry (latest)
        run: docker push ghcr.io/brgman/agenda42:latest

      - name: Push Docker image to GitHub Container Registry (version)
        run: docker push ghcr.io/brgman/agenda42:${{ steps.pkg.outputs.version }}
